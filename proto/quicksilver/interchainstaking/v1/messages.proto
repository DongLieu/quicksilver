syntax = "proto3";
package quicksilver.interchainstaking.v1;

import "gogoproto/gogo.proto";
import "cosmos_proto/cosmos.proto";

option go_package = "github.com/ingenuity-build/quicksilver/x/interchainstaking/types";

// Msg defines the bank Msg service.
service Msg {
  // RegisterZone defines a method for sending coins from one account to another
  // account.
  rpc RegisterZone(MsgRegisterZone) returns (MsgRegisterZoneResponse);
}

// MsgRegisterZone represents a message to send coins from one account to
// another.
message MsgRegisterZone {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  string identifier = 1 [ (gogoproto.moretags) = "yaml:\"zone_name\"" ];
  string chain_id = 2 [ (gogoproto.moretags) = "yaml:\"chain_id\"" ];
  string local_denom = 3 [ (gogoproto.moretags) = "yaml:\"local_denom\"" ];
  string remote_denom = 4 [ (gogoproto.moretags) = "yaml:\"remote_denom\"" ];
  string from_address = 5 [(cosmos_proto.scalar) = "cosmos.AddressString"];
}

// MsgRegisterZoneResponse defines the Msg/Send response type.
message MsgRegisterZoneResponse {}
